body{
    min-height: 800px;
    border: 8px solid black; /* We can see the border of the body overflowing the elements */
    display: flex;
    
    justify-content: center; 
    /* Flex-start puts element at the left of the main axis,
       end, just puts it a the max of the main axis,
       center it just centers, centers the element,
       space between, put it all with the same space
       Space around is the same but without touching the borders
       space-evenly all ways have the same space between without any exceptio
    */
    align-items: center;
    /* This does the same but in the "y" axis 
        here we have start, center , end too
    */

    /*flex-direction: column; */
    /* row uses the display 1,2,3,4,5
     row-reverse uses the display 5, 4, 3, 2 ,1
    column-reverse puts them vertical 1 to 5
    column reverse does the same as row reverse but for vertical axis
    */
    gap: 20px; /* Just creates a gap between the divs*/

    /*flex-wrap: wrap; /* ust makes jump the divs to the other line (repsonsive) (nowrap) prevents it*/

    /* Here we have a difference and is that if you use align-items every 
       row has its axis and algin-content all the elements have the same axis.
       */
    align-content: center;

    /* Here we also have two difrent types of gaps column-gap and row-gap that speak
       by themselves. */

    /* if you just want a responsive boxes UI you just put flex the gap and 
       is all done */

}

#box-1{ /* With this is ID THE BOX doesn't resize. */
    /*flex-shrink: 0;*/
    flex-grow: 1;

}


.box{
    flex-grow: 0 ; /* 0 don't grow 1 grows. */
    /*flex-shrink: 1; The value permits o no the shrink and resize of the boxes */
    display: flex;
    justify-content: center;
    align-items: center;
    height: 200px;
    width: 200px;
    background-color: #0071ff;
    font-size: 40pt;   
}
/* T avoid overflow by minimum width you can enable flex-wrap at smaller screens */
@media(max-width: 575px) {
    body{
        flex-wrap: wrap;
    }
}

